name: Release VyOS current vagrant boxes

on:
  workflow_dispatch:
  schedule:
    - cron: '30 0 * * *'

env:
  VAGRANT_VERSION: 2.4.1-1

jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      latest_iso_version: ${{ steps.set_latest_iso_version.outputs.latest_iso_version }}
      current_box_version: ${{ steps.set_current_box_version.outputs.current_box_version }}
      iso_url: ${{ steps.set_iso_url.outputs.iso_url }}
    steps:
      - name: Get latest release
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          result-encoding: string
          debug: true
          script: |
            const result = await github.rest.repos.getLatestRelease({
              owner: "vyos",
              repo: "vyos-rolling-nightly-builds",
            });
            console.log(result);
            return result.data.tag_name;
      - name: Set latest iso version
        id: set_latest_iso_version
        run: |
          v=$(echo ${{steps.get_latest_release.outputs.result}} | cut -d'-' -f3)
          echo "latest_iso_version: ${v:0:8}.${v:8:2}.${v:10:2}"
          echo "latest_iso_version=${v:0:8}.${v:8:2}.${v:10:2}" >> $GITHUB_OUTPUT
      - name: Set iso url
        id: set_iso_url
        run: |
          v="${{steps.get_latest_release.outputs.result}}"
          echo "iso_url: https://github.com/vyos/vyos-rolling-nightly-builds/releases/download/${v}/vyos-${v}-amd64.iso"
          echo "iso_url=https://github.com/vyos/vyos-rolling-nightly-builds/releases/download/${v}/vyos-${v}-amd64.iso" >> $GITHUB_OUTPUT
      - name: Set current box version
        id: set_current_box_version
        run: |
          v=$(curl -s --header "Authorization: Bearer $VAGRANT_TOKEN" https://app.vagrantup.com/api/v1/box/vyos/current | jq -r .current_version.version)
          echo "current_box_version=${v}" >> $GITHUB_OUTPUT
        env:
          VAGRANT_TOKEN: ${{ secrets.vagrant_token }}

  create_version:
    needs: get_version
    if: needs.get_version.outputs.latest_iso_version != needs.get_version.outputs.current_box_version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        box_name: ['vyos/current', 'higebu/vyos']
      max-parallel: 1
    steps:
      - name: Install Vagrant
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install vagrant=${VAGRANT_VERSION}
      - name: vagrant cloud auth login
        env:
          VAGRANT_TOKEN: ${{ secrets.vagrant_token }}
        run: |
          vagrant cloud auth login --token "$VAGRANT_TOKEN"
      - name: vagrant cloud version create
        run: |
          vagrant cloud version create ${{ matrix.box_name }} ${{ needs.get_version.outputs.latest_iso_version }}

  build:
    needs: [get_version, create_version]
    if: needs.get_version.outputs.latest_iso_version != needs.get_version.outputs.current_box_version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        provider: ['libvirt', 'virtualbox']
        box_name: ['vyos/current', 'higebu/vyos']
    steps:
      - uses: actions/checkout@v4
        with:
          ref: actions
      - run: pipx install --include-deps ansible
      - name: Install Vagrant
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install vagrant=${VAGRANT_VERSION}
      - name: vagrant cloud auth login
        env:
          VAGRANT_TOKEN: ${{ secrets.vagrant_token }}
        run: |
          vagrant cloud auth login --token "$VAGRANT_TOKEN"
      - run: |
          ansible-playbook vagrant-${{ matrix.provider }}.yml -e vyos_vagrant_box_name=${{ matrix.box_name }} -e box_version=${{ needs.get_version.outputs.latest_iso_version }} -e release=True -e vyos_iso_url=${{ needs.get_version.outputs.iso_url }}

  release_version:
    needs: [build]
    if: needs.get_version.outputs.latest_iso_version != needs.get_version.outputs.current_box_version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        box_name: ['vyos/current', 'higebu/vyos']
      max-parallel: 1
    steps:
      - name: Install Vagrant
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install vagrant=${VAGRANT_VERSION}
      - name: vagrant cloud auth login
        env:
          VAGRANT_TOKEN: ${{ secrets.vagrant_token }}
        run: |
          vagrant cloud auth login --token "$VAGRANT_TOKEN"
      - name: vagrant cloud version create
        run: |
          vagrant cloud version release ${{ matrix.box_name }} ${{ needs.get_version.outputs.latest_iso_version }}

